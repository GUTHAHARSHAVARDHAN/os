//SEQUENTIAL

#include<stdio.h>
#define FALSE 0
#define TRUE 1

int allocateSequentially(int startingPosition, int allocationLength, int maximumSize, int block[])
{
	int isPossible = TRUE;
	int i;
	if(startingPosition + allocationLength > maximumSize + 1)
	{
		return FALSE;
	}
	for(i=startingPosition-1; i<startingPosition+allocationLength-1; i++)
	{
		if(block[i] == TRUE)
		{
			isPossible = FALSE;
			return FALSE;
		}
	}
	for(i=startingPosition-1; i<startingPosition+allocationLength-1; i++)
	{
		block[i] = TRUE;
	}
	return TRUE;
}

int main()
{
	int allocationLength, startingPosition, maximumSize;
	int i, j;
	int inputChoice;
	printf("\nSequential File Allocation Method Demonstration\n ---------- ---- ---------- ------");
	printf("\nEnter the maximum size available : ");
	scanf("%d", &maximumSize);
	int block[maximumSize];
	for(i=0; i<maximumSize; i++)
	{
		block[i] = FALSE;
	}
	while(1)
	{
		printf("\n MENU : \n 1. Allocate \n 2. Exit \n Choice : ");
		scanf("%d", &inputChoice);
		if(inputChoice == 2)
		{
			return 0;
		}
		printf("\nEnter the starting address : ");
		scanf("%d", &startingPosition);
		printf("\nEnter the length of the block : ");
		scanf("%d", &allocationLength);
		if(allocateSequentially(startingPosition, allocationLength, maximumSize, block) == TRUE)
		{
			printf("\nSuccessfully Allocated!");
		}
		else
		{
			printf("\nSpace cannot be allocated!");
		}
	}
}
